// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// pairwise_hellinger_test
List pairwise_hellinger_test(List data_list, int grid_points, double bandwidth);
RcppExport SEXP _PkgDistributionCompare_pairwise_hellinger_test(SEXP data_listSEXP, SEXP grid_pointsSEXP, SEXP bandwidthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type data_list(data_listSEXP);
    Rcpp::traits::input_parameter< int >::type grid_points(grid_pointsSEXP);
    Rcpp::traits::input_parameter< double >::type bandwidth(bandwidthSEXP);
    rcpp_result_gen = Rcpp::wrap(pairwise_hellinger_test(data_list, grid_points, bandwidth));
    return rcpp_result_gen;
END_RCPP
}
// pairwise_ks_test
List pairwise_ks_test(List data_list, int n_terms);
RcppExport SEXP _PkgDistributionCompare_pairwise_ks_test(SEXP data_listSEXP, SEXP n_termsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type data_list(data_listSEXP);
    Rcpp::traits::input_parameter< int >::type n_terms(n_termsSEXP);
    rcpp_result_gen = Rcpp::wrap(pairwise_ks_test(data_list, n_terms));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PkgDistributionCompare_pairwise_hellinger_test", (DL_FUNC) &_PkgDistributionCompare_pairwise_hellinger_test, 3},
    {"_PkgDistributionCompare_pairwise_ks_test", (DL_FUNC) &_PkgDistributionCompare_pairwise_ks_test, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_PkgDistributionCompare(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
